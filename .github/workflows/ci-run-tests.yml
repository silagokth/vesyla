name: Run DRRA tests

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string
      branch:
        type: string
        default: 'master'

jobs:
  run-tests:
    runs-on: [modelsim, vesyla, bender, sst]
    steps:
      - name: Install gh CLI
        run: |
          curl -sS https://webi.sh/gh | sh
          source ~/.config/envman/PATH.env
          gh --version

      - name: Download DRRA components library
        run: |
          source ~/.config/envman/PATH.env
          gh release download --repo silagokth/drra-components --pattern "library.tar.gz"
          if [ ! -f library.tar.gz ]; then
            echo "Error: library.tar.gz not found"
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DRRA_COMPONENTS_PAT_VESYLA_READ_ONLY }}

      - name: Extract library
        run: |
          rm -rf library
          tar -xzf library.tar.gz
          rm library.tar.gz

      - name: Checkout DRRA tests
        uses: actions/checkout@v4
        with:
          repository: silagokth/drra-tests
          path: tests
          ref: master
          token: ${{ secrets.DRRA_TESTS_PAT_VESYLA_READ_ONLY }}

      - name: Check drra-tests branch
        run: |
          cd "${{ github.workspace }}/tests"
          git fetch --all
          if git show-ref --verify --quiet refs/remotes/origin/${{ inputs.branch }}; then
            git checkout ${{ inputs.branch }}
            echo "Switching to drra-tests@${{ inputs.branch }}"
          else
            echo "Using the drra-tests master branch"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.DRRA_TESTS_PAT_VESYLA_READ_ONLY }}

      - name: Get built vesyla artifact
        uses: actions/download-artifact@v4
        with:
          name: vesyla-${{ github.sha }}

      - name: Add vesyla to PATH
        run: |
          chmod a+x vesyla
          mkdir -p $HOME/.local/bin
          mv vesyla $HOME/.local/bin
          echo "$HOME/.local/bin" > $GITHUB_PATH

      - name: Check if vesyla is correctly installed
        run: |
          version=$(vesyla --version | grep '^vesyla ' | awk '{print $2}')
          echo "Vesyla version: $version"
          echo "Artifact version: ${{ inputs.version }}"
          if [ "$version" = "${{ inputs.version }}" ]; then
            echo "Versions match"
          else
            echo "Versions do not match"
            exit 1
          fi

      - name: Run DRRA tests
        run: |
          cd tests
          . /usr/share/modules/init/sh
          module use /opt/modules
          module add questasim
          module add bender
          module add sst
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          export VESYLA_SUITE_PATH_COMPONENTS=$(readlink -e ../library)
          vesyla --version
          vesyla testcase generate -d ./testcases
          ./run.sh

      - name: Compress test outputs
        run: tar czf output.tar.gz tests/output

      - name: Upload test outputs
        uses: actions/upload-artifact@v4
        with:
          name: test-outputs
          path: output.tar.gz
