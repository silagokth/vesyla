{"$message_type":"diagnostic","message":"unused imports: `debug`, `trace`, `warn`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":16,"byte_end":20,"line_start":1,"line_end":1,"column_start":17,"column_end":21,"is_primary":true,"text":[{"text":"use log::{info, warn, error, debug, trace};","highlight_start":17,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":29,"byte_end":34,"line_start":1,"line_end":1,"column_start":30,"column_end":35,"is_primary":true,"text":[{"text":"use log::{info, warn, error, debug, trace};","highlight_start":30,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src/main.rs","byte_start":36,"byte_end":41,"line_start":1,"line_end":1,"column_start":37,"column_end":42,"is_primary":true,"text":[{"text":"use log::{info, warn, error, debug, trace};","highlight_start":37,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":14,"byte_end":20,"line_start":1,"line_end":1,"column_start":15,"column_end":21,"is_primary":true,"text":[{"text":"use log::{info, warn, error, debug, trace};","highlight_start":15,"highlight_end":21}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src/main.rs","byte_start":27,"byte_end":41,"line_start":1,"line_end":1,"column_start":28,"column_end":42,"is_primary":true,"text":[{"text":"use log::{info, warn, error, debug, trace};","highlight_start":28,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `debug`, `trace`, `warn`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:1:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse log::{info, warn, error, debug, trace};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `std::task::Context`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src/main.rs","byte_start":87,"byte_end":105,"line_start":5,"line_end":5,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::task::Context;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":83,"byte_end":106,"line_start":5,"line_end":5,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::task::Context;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `std::task::Context`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::task::Context;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"the trait bound `JsonValue: serde::ser::Serialize` is not satisfied","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1426,"byte_end":1433,"line_start":57,"line_end":57,"column_start":53,"column_end":60,"is_primary":true,"text":[{"text":"            $crate::value::Value::from_serializable(&$value),","highlight_start":53,"highlight_end":60}],"label":"the trait `serde::ser::Serialize` is not implemented for `JsonValue`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1233,"byte_end":1266,"line_start":52,"line_end":52,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::__pair!($ctx, $key, $key);","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1035,"byte_end":1074,"line_start":42,"line_end":42,"column_start":13,"column_end":52,"is_primary":false,"text":[{"text":"            $crate::__pair!(ctx, $key $(, $value)?);","highlight_start":13,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2398,"byte_end":2427,"line_start":75,"line_end":75,"column_start":32,"column_end":61,"is_primary":false,"text":[{"text":"    println!(\"{}\", tmpl.render(minijinja::context!(json_obj)).unwrap());","highlight_start":32,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"minijinja::context!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":861,"byte_end":881,"line_start":36,"line_end":36,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! context {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pair!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1168,"byte_end":1187,"line_start":50,"line_end":50,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! __pair {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pair!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1168,"byte_end":1187,"line_start":50,"line_end":50,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! __pair {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1386,"byte_end":1425,"line_start":57,"line_end":57,"column_start":13,"column_end":52,"is_primary":false,"text":[{"text":"            $crate::value::Value::from_serializable(&$value),","highlight_start":13,"highlight_end":52}],"label":"required by a bound introduced by this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1233,"byte_end":1266,"line_start":52,"line_end":52,"column_start":9,"column_end":42,"is_primary":false,"text":[{"text":"        $crate::__pair!($ctx, $key, $key);","highlight_start":9,"highlight_end":42}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1035,"byte_end":1074,"line_start":42,"line_end":42,"column_start":13,"column_end":52,"is_primary":false,"text":[{"text":"            $crate::__pair!(ctx, $key $(, $value)?);","highlight_start":13,"highlight_end":52}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"src/main.rs","byte_start":2398,"byte_end":2427,"line_start":75,"line_end":75,"column_start":32,"column_end":61,"is_primary":false,"text":[{"text":"    println!(\"{}\", tmpl.render(minijinja::context!(json_obj)).unwrap());","highlight_start":32,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"minijinja::context!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":861,"byte_end":881,"line_start":36,"line_end":36,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! context {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pair!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1168,"byte_end":1187,"line_start":50,"line_end":50,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! __pair {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::__pair!","def_site_span":{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/context.rs","byte_start":1168,"byte_end":1187,"line_start":50,"line_end":50,"column_start":1,"column_end":20,"is_primary":false,"text":[{"text":"macro_rules! __pair {","highlight_start":1,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the following other types implement trait `serde::ser::Serialize`:\n  bool\n  char\n  isize\n  i8\n  i16\n  i32\n  i64\n  i128\nand 130 others","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"required by a bound in `Value::from_serializable`","code":null,"level":"note","spans":[{"file_name":"/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/value.rs","byte_start":27085,"byte_end":27094,"line_start":837,"line_end":837,"column_start":33,"column_end":42,"is_primary":true,"text":[{"text":"    pub fn from_serializable<T: Serialize>(value: &T) -> Value {","highlight_start":33,"highlight_end":42}],"label":"required by this bound in `Value::from_serializable`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m: the trait bound `JsonValue: serde::ser::Serialize` is not satisfied\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:75:32\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m75\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{}\", tmpl.render(minijinja::context!(json_obj)).unwrap());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mthe trait `serde::ser::Serialize` is not implemented for `JsonValue`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mrequired by a bound introduced by this call\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: the following other types implement trait `serde::ser::Serialize`:\u001b[0m\n\u001b[0m              bool\u001b[0m\n\u001b[0m              char\u001b[0m\n\u001b[0m              isize\u001b[0m\n\u001b[0m              i8\u001b[0m\n\u001b[0m              i16\u001b[0m\n\u001b[0m              i32\u001b[0m\n\u001b[0m              i64\u001b[0m\n\u001b[0m              i128\u001b[0m\n\u001b[0m            and 130 others\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `Value::from_serializable`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/herenvarno/.cargo/registry/src/index.crates.io-6f17d22bba15001f/minijinja-0.15.0/src/value.rs:837:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m837\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_serializable<T: Serialize>(value: &T) -> Value {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Value::from_serializable`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::__pair` which comes from the expansion of the macro `minijinja::context` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error; 2 warnings emitted","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error; 2 warnings emitted\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}
