{
  "platform": "DRRA-2",
  "machine_type": "resource",
  "machine": "swb",
  "instr_bitwidth": 32,
  "instr_code_bitwidth": 3,
  "instruction_templates": [
    {
      "code": 4,
      "name": "swb",
      "segment_templates": [
        {
          "name": "slot",
          "comment": "Slot number",
          "bitwidth": 4
        },
        {
          "name": "option",
          "comment": "configuration option",
          "bitwidth": 2
        },
        {
          "name": "channel",
          "comment": "Bus channel. Note: if the SWB is implemented by a crossbar, the channel is always equals to the target slot.",
          "bitwidth": 4
        },
        {
          "name": "source",
          "comment": "Source slot.",
          "bitwidth": 4
        },
        {
          "name": "target",
          "comment": "Target slot.",
          "bitwidth": 4
        }
      ]
    },
    {
      "code": 5,
      "name": "route",
      "segment_templates": [
        {
          "name": "slot",
          "comment": "Slot number",
          "bitwidth": 4
        },
        {
          "name": "option",
          "comment": "configuration option",
          "bitwidth": 2
        },
        {
          "name": "sr",
          "comment": "Send or receive.",
          "bitwidth": 1,
          "verbo_map": [
            {
              "key": 0,
              "val": "s"
            },
            {
              "key": 1,
              "val": "r"
            }
          ]
        },
        {
          "name": "source",
          "comment": "1-hot encoded direction: E/N/W/S. If it's a receive instruction, the direction can only have 1 bit set to 1.",
          "bitwidth": 4
        },
        {
          "name": "target",
          "comment": "1-hot encoded slot number. If it's a send instruction, the slot can only have 1 bit set to 1.",
          "bitwidth": 16
        }
      ]
    },
    {
      "code": 0,
      "name": "rep",
      "segment_templates": [
        {
          "name": "slot",
          "comment": "Slot number",
          "bitwidth": 4
        },
        {
          "name": "port",
          "comment": "The port number",
          "bitwidth": 2,
          "verbo_map": [
            {
              "key": 0,
              "val": "read narrow"
            },
            {
              "key": 1,
              "val": "read wide"
            },
            {
              "key": 2,
              "val": "write narrow"
            },
            {
              "key": 3,
              "val": "write wide"
            }
          ]
        },
        {
          "name": "level",
          "comment": "The level of the REP instruction. [0]: inner most level, [15]: outer most level.",
          "bitwidth": 4
        },
        {
          "name": "iter",
          "comment": "level-1 iteration - 1.",
          "bitwidth": 6
        },
        {
          "name": "step",
          "comment": "level-1 step",
          "bitwidth": 6,
          "default_val": 1,
          "is_signed": true
        },
        {
          "name": "delay",
          "comment": "delay",
          "bitwidth": 6
        }
      ]
    },
    {
      "code": 1,
      "name": "repx",
      "segment_templates": [
        {
          "name": "slot",
          "comment": "Slot number",
          "bitwidth": 4
        },
        {
          "name": "port",
          "comment": "The port number",
          "bitwidth": 2,
          "verbo_map": [
            {
              "key": 0,
              "val": "read narrow"
            },
            {
              "key": 1,
              "val": "read wide"
            },
            {
              "key": 2,
              "val": "write narrow"
            },
            {
              "key": 3,
              "val": "write wide"
            }
          ]
        },
        {
          "name": "level",
          "comment": "The level of the REP instruction. [0]: inner most level, [15]: outer most level.",
          "bitwidth": 4
        },
        {
          "name": "iter",
          "comment": "level-1 iteration - 1.",
          "bitwidth": 6
        },
        {
          "name": "step",
          "comment": "level-1 step",
          "bitwidth": 6,
          "default_val": 1,
          "is_signed": true
        },
        {
          "name": "delay",
          "comment": "delay",
          "bitwidth": 6
        }
      ]
    },
    {
      "code": 2,
      "name": "fsm",
      "segment_templates": [
        {
          "name": "slot",
          "comment": "Slot number",
          "bitwidth": 4
        },
        {
          "name": "port",
          "comment": "The port number",
          "bitwidth": 2
        },
        {
          "name": "delay_0",
          "comment": "Delay between state 0 and 1.",
          "bitwidth": 7
        },
        {
          "name": "delay_1",
          "comment": "Delay between state 1 and 2.",
          "bitwidth": 7
        },
        {
          "name": "delay_2",
          "comment": "Delay between state 2 and 3.",
          "bitwidth": 7
        }
      ]
    }
  ]
}