[
    {
      "code": 0,
      "name": "halt",
      "machines": ["controller_io", "controller_normal"]
    },
    {
      "code": 1,
      "name": "wait",
      "machines": ["controller_io", "controller_normal"],
      "segment_templates": [
        {
          "name": "mode",
          "comment": "Wait mode, 0 means wait for a number of cycles, 1 means wait for events.",
          "bitwidth": 1
        },
        {
          "name": "cycle",
          "comment": "If mode is 0, it means the extra cycles to wait excluding the current cycle when this wait instruction is issued. If the mode is 1, this is the 1-hot encoding of event slots.",
          "bitwidth": 27
        }
      ]
    },
    {
      "code": 2,
      "name": "act",
      "machines": ["controller_io", "controller_normal"],
      "segment_templates": [
        {
          "name": "ports",
          "comment": "1-hot encoded slots that need to be activated.",
          "bitwidth": 16
        },
        {
          "name": "mode",
          "comment": "Filter mode: [0]: Continues ports start from slot X; [1] All port X in each slot; [2]: the predefined 64-bit activation code in internal activation memory location X.",
          "bitwidth": 4
        },
        {
          "name": "param",
          "comment": "The parameter for the filter mode.",
          "bitwidth": 8
        }
      ]
    },
    {
      "code": 3,
      "name": "calc",
      "machines": ["controller_io", "controller_normal"],
      "segment_templates": [
        {
          "name": "mode",
          "comment": "Calculation mode",
          "bitwidth": 6,
          "verbo_map": [
            { "key": 0, "val": "idle" },
            { "key": 1, "val": "add" },
            { "key": 2, "val": "sub" },
            { "key": 3, "val": "lls" },
            { "key": 4, "val": "lrs" },
            { "key": 5, "val": "mul" },
            { "key": 6, "val": "div" },
            { "key": 7, "val": "mod" },
            { "key": 8, "val": "bitand" },
            { "key": 9, "val": "bitor" },
            { "key": 10, "val": "bitinv" },
            { "key": 11, "val": "bitxor" },
            { "key": 17, "val": "eq" },
            { "key": 18, "val": "ne" },
            { "key": 19, "val": "gt" },
            { "key": 20, "val": "ge" },
            { "key": 21, "val": "lt" },
            { "key": 22, "val": "le" },
            { "key": 32, "val": "and" },
            { "key": 33, "val": "or" },
            { "key": 34, "val": "not" }
          ]
        },
        {
          "name": "operand1",
          "comment": "First operand.",
          "bitwidth": 4
        },
        {
          "name": "operand2_sd",
          "comment": "Is the second operand static or dynamic?",
          "bitwidth": 1,
          "verbo_map": [
            { "key": 0, "val": "s" },
            { "key": 1, "val": "d" }
          ]
        },
        {
          "name": "operand2",
          "comment": "Second operand.",
          "bitwidth": 8
        },
        {
          "name": "result",
          "comment": "The register to store the result. It could be the scalar register or flag register, depending on the calculation mode.",
          "bitwidth": 4
        }
      ]
    },
    {
      "code": 4,
      "name": "brn",
      "machines": ["controller_io", "controller_normal"],
      "segment_templates": [
        {
          "name": "reg",
          "comment": "The flag register",
          "bitwidth": 4
        },
        {
          "name": "target_true",
          "comment": "The PC to jump to in case the condition is true. The PC is relative to the current PC.",
          "is_signed": true,
          "bitwidth": 9
        },
        {
          "name": "target_false",
          "comment": "The PC to jump to in case the condition is false. The PC is relative to the current PC.",
          "is_signed": true,
          "bitwidth": 9
        }
      ]
    }
]
