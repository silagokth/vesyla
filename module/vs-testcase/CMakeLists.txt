set(CURRENT_SUBPROJECT_NAME "vs-testcase")

file(GLOB SRC "src/*.rs")

add_custom_command(
   OUTPUT ${CMAKE_BINARY_DIR}/cargo/${CURRENT_SUBPROJECT_NAME}/release/${CURRENT_SUBPROJECT_NAME}
   DEPENDS ${SRC}
   COMMAND mkdir -p ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} &&
    mkdir -p ${CMAKE_BINARY_DIR}/cargo/${CURRENT_SUBPROJECT_NAME} &&
    cargo build --release --target-dir=${CMAKE_BINARY_DIR}/cargo/${CURRENT_SUBPROJECT_NAME} &&
    cp -p ${CMAKE_BINARY_DIR}/cargo/${CURRENT_SUBPROJECT_NAME}/release/${CURRENT_SUBPROJECT_NAME} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/
   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
)

add_custom_target(gen-${CURRENT_SUBPROJECT_NAME} ALL DEPENDS ${CMAKE_BINARY_DIR}/cargo/${CURRENT_SUBPROJECT_NAME}/release/${CURRENT_SUBPROJECT_NAME})

install(PROGRAMS ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CURRENT_SUBPROJECT_NAME} DESTINATION bin COMPONENT ${CURRENT_SUBPROJECT_NAME})
install(DIRECTORY template DESTINATION share/${PROJECT_NAME} PATTERN "*.sh" EXCLUDE)
file(COPY template DESTINATION ${CMAKE_SHARED_OUTPUT_DIRECTORY} PATTERN "*.sh" EXCLUDE)
install(DIRECTORY template DESTINATION share/${PROJECT_NAME} PATTERN "*.sh" PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ)
file(COPY template DESTINATION ${CMAKE_SHARED_OUTPUT_DIRECTORY} PATTERN "*.sh" PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ GROUP_EXECUTE GROUP_READ WORLD_EXECUTE WORLD_READ)
install(DIRECTORY testcase DESTINATION share/${PROJECT_NAME})
file(COPY testcase DESTINATION ${CMAKE_SHARED_OUTPUT_DIRECTORY})

