epoch <rb0> {
    linear (input_r_x == input_w_x)
    linear (input_w_x < read_x)
    linear (route0r < read_x)
    linear (route1wr < write_x)
    linear (route1wr < write_x)
    linear (read_x + 1 == write_x)
}
epoch <rb1>{
    linear (input_r_b == input_w_b)
    linear (input_w_b < read_b)
    linear (read_b + 1 == write_b)
    linear (read_b.e0[1][0] + 1 == write_b.e0[1][0])
    linear (write_b.e0[0][0] == read_b_seq.e0[0][0] - 1)
    linear (write_b.e0[0][1] < read_b_seq.e0[0][16])
    linear (write_b.e0[0][2] < read_b_seq.e0[0][32])
    linear (write_b.e0[0][3] < read_b_seq.e0[0][48])
    linear (write_b.e0[1][0] < read_b_seq.e0[1][0])
    linear (write_b.e0[1][1] < read_b_seq.e0[1][16])
    linear (write_b.e0[1][0] > read_b_seq.e0[0][15])
    linear (write_b.e0[1][1] > read_b_seq.e0[0][31])
    linear (write_b.e0[1][2] > read_b_seq.e0[0][47])
    linear (write_b.e0[1][3] > read_b_seq.e0[0][63])
    linear (write_b.e0[2][0] > read_b_seq.e0[1][15])
    linear (write_b.e0[2][1] > read_b_seq.e0[1][31])
    linear (write_b.e0[2][2] > read_b_seq.e0[1][47])
    linear (write_b.e0[2][3] > read_b_seq.e0[1][63])
    linear (write_b.e0[1][0] == read_b_seq.e0[0][0] + 63)
    linear (swb < read_a_seq)
    linear (read_a_seq == read_b_seq)
    linear (compute.e0[0] == read_a_seq.e0[0][0]+1)
    linear (compute.e0[1] == read_a_seq.e0[1][0]+1)
    linear (write_c_seq.e0[0] == read_a_seq.e0[0][0] + 64 + 1)
    linear (write_c_seq.e0[1] == read_a_seq.e0[1][0] + 64 + 1)
    linear (compute != route1wr)
    linear (compute != swb)
    linear (read_c.e0[3] > write_c_seq.e0[63])
    linear (write_c == read_c + 1)
    linear (output_r == write_c +1)
    linear (output_r == output_w)
}