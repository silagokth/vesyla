epoch rb0 {
type linear
input_r == input_w
route0r < read_ab
route1wr < write_a
route1wr < write_b

read_ab.e0[0][0] + 1 == write_a.e0[0][0]
read_ab.e0[0][1] + 1 == write_b.e0[0][0]
read_ab.e0[1][0] + 1 == write_a.e0[1][0]
read_ab.e0[1][1] + 1 == write_b.e0[1][0]

write_a.e0[0][0] < read_a_seq.e0[0][0]
write_b.e0[0][0] < read_b_seq.e0[0][0]
read_a_seq.e0[0][63] < write_a.e0[1][3]
read_b_seq.e0[0][63] < write_b.e0[1][3]
read_a_seq.e0[6][63] < write_a.e0[7][3]
read_b_seq.e0[6][63] < write_b.e0[7][3]
write_a.e0[1][0] < read_a_seq.e0[1][0]
write_b.e0[1][0] < read_b_seq.e0[1][0]
write_a.e0[7][0] < read_a_seq.e0[7][0]
write_b.e0[7][0] < read_b_seq.e0[7][0]

swb < read_a_seq
read_a_seq == read_b_seq
read_a_seq + 1 > compute
write_c_seq == read_a_seq + 2

compute != route1wr
compute != swb

read_c.e0[0][3] > write_c_seq.e0[0][63]
read_c.e0[1][3] > write_c_seq.e0[1][63]
read_c.e0[7][3] > write_c_seq.e0[7][63]
write_c_seq.e0[1][0] > read_c.e0[0][0]

write_c == read_c + 1
output_r.e0[31] > write_c.e0[7][3]
output_r == output_w
}
