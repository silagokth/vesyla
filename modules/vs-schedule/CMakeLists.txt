set(CURRENT_SUBPROJECT_NAME "vs-schedule")

file(GLOB SRC "src/*.py")

# First check if PROTOC_PATH is defined
if(NOT DEFINED PROTOC_PATH)
   set(PROTOC_PATH "protoc")
endif()

execute_process(
   COMMAND bash -c "git describe --tags --exact-match 2>/dev/null || git describe --always --tags"
   WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
   OUTPUT_VARIABLE VESYLA_VERSION
   OUTPUT_STRIP_TRAILING_WHITESPACE
)

# If the VESYLA_VERSION value is set, write it to a file
if(NOT VESYLA_VERSION)
   set(VESYLA_VERSION "version unknown")
endif()

file(WRITE "${CMAKE_CURRENT_SOURCE_DIR}/src/__version__.py" "VESYLA_VERSION = \"${VESYLA_VERSION}\"\n")

add_custom_command(
   OUTPUT ${CMAKE_BINARY_DIR}/pyinstaller/${CURRENT_SUBPROJECT_NAME}/dist/${CURRENT_SUBPROJECT_NAME}
   DEPENDS ${SRC}
   COMMAND ${PROTOC_PATH} -I=${CMAKE_CURRENT_SOURCE_DIR}/src --python_out=${CMAKE_CURRENT_SOURCE_DIR}/src ds.proto && mkdir -p ${CMAKE_RUNTIME_OUTPUT_DIRECTORY} && mkdir -p ${CMAKE_BINARY_DIR}/pyinstaller/${CURRENT_SUBPROJECT_NAME} && cd ${CMAKE_BINARY_DIR}/pyinstaller/${CURRENT_SUBPROJECT_NAME} && pyinstaller -F -n ${CURRENT_SUBPROJECT_NAME} ${CMAKE_CURRENT_SOURCE_DIR}/src/main.py && cp -p ${CMAKE_BINARY_DIR}/pyinstaller/${CURRENT_SUBPROJECT_NAME}/dist/${CURRENT_SUBPROJECT_NAME} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/
)

add_custom_target(gen-${CURRENT_SUBPROJECT_NAME} ALL DEPENDS ${CMAKE_BINARY_DIR}/pyinstaller/${CURRENT_SUBPROJECT_NAME}/dist/${CURRENT_SUBPROJECT_NAME})

install(PROGRAMS ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CURRENT_SUBPROJECT_NAME} DESTINATION bin COMPONENT ${CURRENT_SUBPROJECT_NAME})